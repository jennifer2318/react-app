{"version":3,"sources":["Helpers/validator.js","Components/Input.js","Actions/index.js","Components/Login.js","Components/MessageBar.js","Components/DataTable.js","Components/Home.js","App.js","reportWebVitals.js","Reducers/loginReducer.js","Reducers/messageBarReducer.js","Reducers/usersReducer.js","Reducers/index.js","index.js","configureStore.js"],"names":["validateString","value","minLen","maxLen","valid","err","length","Input","props","changeHandler","e","validator","target","name","validType","test","validateUsername","setState","onChange","state","className","classNames","this","toLowerCase","label","type","placeholder","Component","loginUser","obj","payload","showMessage","msgObj","setUsers","usersArr","Login","changeHandle","submitHandle","preventDefault","username","password","userLogin","onSubmit","connect","token","login","dispatch","userInfo","user","axios","post","then","response","data","localStorage","setItem","catch","error","status","non_field_errors","message","MessageBar","clickHandle","hideMessage","timeoutId","prevProps","setTimeout","clearTimeout","onClick","messageBar","DataTable","sortByKey","arr","key","isTop","console","log","sort","a","b","isNaN","Number","filterHandleClick","currentFilter","isTopSort","isFiltered","attributes","getNamedItem","usersFilter","renderTableHeader","Object","keys","map","v","k","renderRows","values","dataValue","dataKey","readOnly","checked","filteredItems","filter","p","startsWith","filterable","Home","getUsersFetch","users","usersList","get","headers","Array","isArray","removeItem","App","componentDidMount","getToken","logout","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","ReactDOM","render","StrictMode","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"+RAAaA,EAAiB,SAACC,GAAqC,IAA9BC,EAA6B,uDAApB,EAAGC,EAAiB,uDAAR,IACvD,MAAc,KAAVF,EAAqB,CAACG,OAAO,EAAOC,IAAI,mFACxCJ,EAAMK,OAASJ,EAAe,CAACE,OAAO,EAAOC,IAAI,8HAAD,OAA4BH,EAA5B,sDAChDD,EAAMK,OAASH,EAAe,CAACC,OAAO,EAAOC,IAAI,oIAAD,OAA6BF,EAA7B,sDAE7C,CAACC,OAAO,EAAMC,IAAK,KCgEfE,E,kDA/DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,cAAgB,SAAAC,GAAM,IAIdC,EAHGV,EAASS,EAAEE,OAAXX,MACDY,EAAO,EAAKL,MAAMK,KAIxB,OAAQ,EAAKL,MAAMM,WACf,IAAK,WACDH,EDhBgB,SAACV,GAC7B,IAAMU,EAAYX,EAAeC,GACjC,OAAwB,IAApBU,EAAUP,MAAwBO,EAEjC,cAAcI,KAAKd,GAEjB,CAACG,OAAO,EAAMC,IAAK,IAFc,CAACD,OAAO,EAAOC,IAAI,uQCYnCW,CAAiBf,GAC7B,MAEJ,QAASU,EAAYX,EAAeC,GAXvB,MAcIU,EAAdP,EAdU,EAcVA,MAAOC,EAdG,EAcHA,IAEd,EAAKY,SAAS,CAAChB,QAAOG,QAAOC,QAE7B,EAAKG,MAAMU,SAAS,CAACd,QAAOH,QAAOY,UAzBnC,EAAKM,MAAQ,CACTlB,MAAO,EAAKO,MAAMP,MAClBG,OAAO,EACPC,IAAK,mFANM,E,qDA+BT,IAAD,IACL,OACI,sBAAKe,UAAWC,IAAWC,KAAKH,MAAMf,MAAQ,QAAU,WAA9B,UAA6CkB,KAAKd,MAAMK,KAAKU,cAA7D,UAAoF,QAASD,KAAKd,MAAMY,WAAlI,UACI,kCAEQE,KAAKd,MAAMgB,MAAQ,sBAAMJ,UAAU,QAAhB,SAAyBE,KAAKd,MAAMgB,QAAgB,KAE3E,uBACIC,KAAI,UAAEH,KAAKd,MAAMiB,YAAb,QAAqB,OACzBZ,KAAMS,KAAKd,MAAMK,KACjBa,YAAW,UAAEJ,KAAKd,MAAMkB,mBAAb,QAA4B,GACvCzB,MAAOqB,KAAKH,MAAMlB,MAClBiB,SAAUI,KAAKb,mBAInBa,KAAKH,MAAMd,IAAM,sBAAMe,UAAU,aAAhB,SAA8BE,KAAKH,MAAMd,MAAc,Y,GAhDxEsB,a,iBCcdC,EAAY,SAAAC,GAAG,MAAK,CACtBJ,KAAM,aACNK,QAASD,IAgBAE,EAAc,SAAAC,GAAM,MAAK,CAClCP,KAAM,0BACNK,QAASE,IAgCPC,EAAW,SAAAC,GAAQ,MAAK,CAC1BT,KAAM,iBACNK,QAASI,ICpEPC,E,kDAEF,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IAQV4B,aAAe,SAAAP,GACX,EAAKZ,SAAL,eAESY,EAAIhB,KAAO,CAACZ,MAAO4B,EAAI5B,MAAOG,MAAOyB,EAAIzB,UAZnC,EAiBnBiC,aAAe,SAAA3B,GACXA,EAAE4B,iBACgB,EAAKnB,MAAMoB,SAASnC,OAAS,EAAKe,MAAMqB,SAASpC,OAG/D,EAAKI,MAAMiC,UAAU,CACjBF,SAAU,EAAKpB,MAAMoB,SAAStC,MAC9BuC,SAAU,EAAKrB,MAAMqB,SAASvC,SArBtC,EAAKkB,MAAQ,CACToB,SAAU,CAACtC,MAAO,GAAIG,OAAO,GAC7BoC,SAAU,CAACvC,MAAO,GAAIG,OAAO,IALlB,E,qDA8Bf,OACI,qBAAKgB,UAAU,uBAAf,SACI,uBAAMsB,SAAUpB,KAAKe,aAArB,UACI,oGACA,cAAC,EAAD,CAAOnB,SAAUI,KAAKc,aAAcV,YAAY,oDAAYb,KAAK,aACjE,cAAC,EAAD,CAAOK,SAAUI,KAAKc,aAAcV,YAAY,0DAAab,KAAK,aAClE,uBAAOY,KAAK,oB,GAtCZE,aAqDLgB,eARS,SAAAxB,GAAK,MAAK,CAC9ByB,MAAOzB,EAAM0B,MAAMD,UAGI,SAAAE,GAAQ,MAAK,CACpCL,UAAW,SAAAM,GAAQ,OAAID,GDrDFE,ECqDqBD,EDpDnC,SAAAD,GACH,OAAOG,IAAMC,KAAK,iEAAkEF,GAC/EG,MAAM,SAAAC,GACCA,EAASC,KAAKT,QACdU,aAAaC,QAAQ,QAASH,EAASC,KAAKT,OAC5CE,EAASlB,EAAUwB,EAASC,KAAKT,YAGxCY,OAAO,SAAAC,GACAA,EAAML,UAAsC,MAA1BK,EAAML,SAASM,QAC7BD,EAAML,SAASC,KAAKM,kBAAkBb,EAASf,EAAY,CAAC6B,QAAS,kMAAwCnC,KAAM,eAXlH,IAAAuB,MCwDVL,CAA6CR,GCpDtD0B,E,kDACF,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IAOVsD,YAAc,SAAApD,GACVA,EAAE4B,iBACF,EAAK9B,MAAMuD,eAPX,EAAK5C,MAAQ,CACT6C,WAAY,GAJD,E,+DAaAC,GAAY,IAAD,OAC1B,GAAG3C,KAAKd,MAAMwB,OAAO4B,UAAYK,EAAUjC,OAAO4B,QAClD,CACI,IAAMI,EAAYE,YAAW,WACzB,EAAK1D,MAAMuD,gBACZ,KAEHzC,KAAKL,SAAS,CAAC+C,iB,6CAKnBG,aAAa7C,KAAKH,MAAM6C,a,+BAGlB,IAAD,EACmB1C,KAAKd,MAAMwB,OAA5B4B,EADF,EACEA,QAASnC,EADX,EACWA,KAEhB,OAAImC,EAEI,sBAAKxC,UAAWC,IAAW,cAAeI,GAA1C,UACI,+BAAOmC,IACP,wBAAQxC,UAAU,QAAQgD,QAAS9C,KAAKwC,iBAIzC,S,GAxCMnC,aAuDVgB,eARS,SAAAxB,GAAK,MAAK,CAC9Ba,OAAQb,EAAMkD,WAAWT,YAGF,SAAAd,GAAQ,MAAK,CACpCiB,YAAa,kBAAMjB,EFhBY,CAC/BrB,KAAM,gCEkBKkB,CAA6CkB,GCgF7CS,G,wDAvIX,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IAWV+D,UAAY,SAACC,EAAKC,GAAqB,IAAhBC,IAAe,yDAElC,OADAC,QAAQC,IAAIH,EAAKC,GACbA,EACOF,EAAIK,MACP,SAACC,EAAGC,GACA,OAAIC,MAAMF,EAAEL,KAASO,MAAMD,EAAEN,IAAcK,EAAEL,GAAOM,EAAEN,GAAO,GAAK,EAC3DQ,OAAOH,EAAEL,IAAQQ,OAAOF,EAAEN,IAAQ,GAAK,KAInDD,EAAIK,MACP,SAACC,EAAGC,GACA,OAAIC,MAAMF,EAAEL,KAASO,MAAMD,EAAEN,IAAcK,EAAEL,GAAOM,EAAEN,GAAO,GAAK,EAC3DQ,OAAOH,EAAEL,IAAQQ,OAAOF,EAAEN,IAAQ,GAAK,MAzBvC,EA8BnBS,kBAAoB,SAAAxE,GAChBA,EAAE4B,iBADmB,IAEd1B,EAAUF,EAAVE,OAFc,EAG0B,EAAKO,MAA7CgE,EAHc,EAGdA,cAAeC,EAHD,EAGCA,UAAWC,EAHZ,EAGYA,WAE3BxE,EAAOD,EAAO0E,WAAWC,aAAa,QAAQtF,MAChDkF,IAAkBtE,GAClB,EAAKI,SAAS,CACVmE,WAAYA,IAEhB,EAAKb,UAAUc,EAAa,EAAKlE,MAAMqE,YAAc,EAAKhF,MAAM6C,KAAM8B,EAAeC,KAErF,EAAKnE,SAAS,CACVkE,cAAetE,EACfuE,WAAW,IAEf,EAAKb,UAAWc,EAAa,EAAKlE,MAAMqE,YAAc,EAAKhF,MAAM6C,KAAOxC,GAAM,KA9CnE,EAkDnB4E,kBAAoB,WAAO,IAChBpC,EAAQ,EAAK7C,MAAb6C,KADe,EAEa,EAAKlC,MAAjCgE,EAFe,EAEfA,cAAeC,EAFA,EAEAA,UAGtB,OAFaM,OAAOC,KAAKtC,EAAK,IAElBuC,KAAK,SAACC,EAAGC,GACjB,OACI,oBAAI1B,QAAS,EAAKc,kBAAmBrE,KAAMgF,EAAGzE,UAAWC,IAAWwE,EAAG,eAAgBV,IAAkBU,GAAkB,IAAdT,EAAqB,aAAe,cAAgB,IAAjK,SAA+KS,GAAJC,OAzDpK,EA8DnBC,WAAa,SAAC1C,GACV,OAAOA,EAAKuC,KAAK,SAACC,EAAGC,GACjB,OACI,oBAAI1E,UAAU,WAAd,SAEQsE,OAAOM,OAAOH,GAAGD,KAAI,SAACK,EAAWC,GAC9B,OAAO,6BAAwC,mBAAdD,EAA0B,uBAAOxE,KAAK,WAAW0E,UAAQ,EAACC,QAASH,IAAeA,GAAnGC,OAHGJ,OAjEvB,EA4EnBrF,cAAgB,SAAAoB,GAAQ,IACbsD,EAAiB,EAAKhE,MAAtBgE,cAEP,GAAItD,EAAIzB,MAAO,CACX,IAAMiG,EAAgB,EAAK7F,MAAM6C,KAAKiD,QAAO,SAAAC,GAAC,OAAIA,EAAEhE,SAASiE,WAAW3E,EAAI5B,UAC5E0E,QAAQC,IAAIyB,GACZ,IAAMhB,GAAcgB,EAAc/F,QAAU,EAC5C,EAAKW,SAAS,CACVuE,YAAaa,EACbhB,WAAYA,EACZ9C,SAAUV,EAAI5B,QAGlB,EAAKsE,UAAU,EAAKpD,MAAMqE,YAAaL,GAAe,QAEtD,EAAKlE,SAAS,CACVuE,YAAa,GACbH,YAAY,EACZ9C,SAAU,KAGd,EAAKgC,UAAU,EAAK/D,MAAM6C,KAAM8B,GAAe,IA9FnD,EAAKhE,MAAQ,CACTgE,cAAe,GACfC,WAAW,EACXI,YAAa,GACbH,YAAY,EACZ9C,SAAU,IARC,E,qDAqGT,IACCc,EAAQ/B,KAAKd,MAAb6C,KAEP,GAAIA,EAAK/C,QAAU,EAAG,OAAO,KAHxB,MAK2BgB,KAAKH,MAA9BqE,EALF,EAKEA,YAAajD,EALf,EAKeA,SAEpB,OACG,gCACI,cAAC,EAAD,CAAOf,MAAM,sJAA8BV,UAAU,WAAWM,UAAU,eAAeM,YAAY,yIAA2Bb,KAAK,aAAaZ,MAAOqB,KAAKH,MAAMoB,SAAUrB,SAAUI,KAAKb,gBAC7L,wBAAOW,UAAWC,IAAW,aAAcC,KAAKd,MAAMiG,WAAa,aAAe,IAAlF,UACI,uBAAOrF,UAAU,oBAAjB,SACA,6BAEQE,KAAKmE,wBAIb,gCAEIlD,EAAWjB,KAAKyE,WAAWP,GAAelE,KAAKyE,WAAW1C,e,GA1HzD1B,cCClB+E,E,kLAEEpF,KAAKd,MAAMmG,kB,+BAIX,OACI,cAAC,EAAD,CAAWtD,KAAM/B,KAAKd,MAAMoG,Y,GAPrBjF,aAsBJgB,eARS,SAAAxB,GAAK,MAAK,CAC9ByF,MAAOzF,EAAM0F,UAAUD,UAGA,SAAA9D,GAAQ,MAAK,CACpC6D,cAAe,kBAAM7D,GJsBd,SAAAA,GACH,IAAMF,EAAQU,aAAaV,MAC3B,GAAIA,EACA,OAAOK,IAAM6D,IAAI,+DAAgE,CAC7EC,QAAS,CACL,cAAgB,SAAhB,OAA0BnE,MAG7BO,MAAM,SAAAC,GACCA,EAASC,MACL2D,MAAMC,QAAQ7D,EAASC,OAAOP,EAASb,EAASmB,EAASC,UAGpEG,OAAO,SAAAC,GACAA,EAAML,UAAsC,MAA1BK,EAAML,SAASM,SACjCJ,aAAa4D,WAAW,SACxBpE,EAvCI,CACxBrB,KAAM,gBAuCcqB,EAASf,EAAY,CAAC6B,QAAS,qGAAsBnC,KAAM,oBIpCpEkB,CAA6C+D,GClBtDS,E,4MACJC,kBAAoB,WAClB,EAAK5G,MAAM6G,Y,EAGXvD,YAAc,SAAApD,GACVA,EAAE4B,iBACFgB,aAAa4D,WAAW,SACxB,EAAK1G,MAAM8G,U,uDAGP,IACC1E,EAAStB,KAAKd,MAAdoC,MAEP,OACE,eAAC,IAAD,WACI,qBAAKxB,UAAU,yBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,+BACI,6BACI,cAAC,IAAD,CAAMA,UAAU,SAASmG,GAAG,IAA5B,0DAGC3E,EAAqE,KAA7D,6BAAI,cAAC,IAAD,CAAMxB,UAAU,SAASmG,GAAG,SAA5B,iDAIjB3E,EACM,wBAAQwB,QAAS9C,KAAKwC,YAAtB,4CACA,YAKlB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,IAAlB,SACM7E,EAAmC,cAAC,EAAD,IAA3B,cAAC,IAAD,CAAU2E,GAAG,aAE5B,cAAC,IAAD,CAAOE,KAAK,SAAZ,SACK7E,EAAQ,cAAC,IAAD,CAAU2E,GAAG,MAAS,cAAC,EAAD,SAG1C,cAAC,EAAD,W,GA3CM5F,aA0DHgB,eATS,SAAAxB,GAAK,MAAK,CAC9ByB,MAAOzB,EAAM0B,MAAMD,UAGI,SAAAE,GAAQ,MAAK,CACpCuE,SAAU,kBAAMvE,GLnCT,SAAAA,GACH,IAAMF,EAAQU,aAAaV,MACvBA,GACAE,EAASlB,EAAUgB,QKiC3B0E,OAAQ,kBAAMxE,ELzCU,CACxBrB,KAAM,oBK2CKkB,CAA6CwE,GCxD7CO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,uBCPRO,EAAe,CACjBtF,MAAO,ICDX,IAAMsF,EAAe,CACjBtE,QAAS,GACTnC,KAAM,ICFV,IAAMyG,EAAe,CACjBtB,MAAO,ICIIuB,kBAAgB,CAC3BtF,MHFW,WAAqD,IAA/B1B,EAA8B,uDAAtB+G,EAAcE,EAAQ,uCAC/D,OAAQA,EAAO3G,MACX,IAAK,aACD,OAAO,2BAAIN,GAAX,IAAkByB,MAAOwF,EAAOtG,UACpC,IAAK,cACD,OAAO,2BAAIX,GAAX,IAAkByB,MAAO,KAC7B,QACI,OAAOzB,IGJfkD,WFFW,WAA0D,IAA/BlD,EAA8B,uDAAtB+G,EAAcE,EAAQ,uCACpE,OAAQA,EAAO3G,MACX,IAAK,0BACD,OAAO,2BAAIN,GAAX,IAAkByC,QAASwE,EAAOtG,UACtC,IAAK,0BACD,OAAO,2BAAIX,GAAX,IAAkByC,QAAS,KAC/B,QACI,OAAOzC,IEJf0F,UDJW,WAAqD,IAA/B1F,EAA8B,uDAAtB+G,EAAcE,EAAQ,uCAC/D,OAAQA,EAAO3G,MACX,IAAK,iBACD,OAAO,2BAAIN,GAAX,IAAkByF,MAAOwB,EAAOtG,UACpC,IAAK,mBACD,OAAO,2BAAIX,GAAX,IAAkByF,MAAO,KAC7B,QACI,OAAOzF,MEHnBkH,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MCND,WAA8B,IAApBN,EAAmB,uDAAJ,GACpC,OAAOO,YAAYC,EAAaR,EAAcS,YAAgBC,MDK3CJ,GAAjB,SACE,cAAC,EAAD,QAGNK,SAASC,eAAe,SAG1BpB,M","file":"static/js/main.8132121d.chunk.js","sourcesContent":["export const validateString = (value, minLen = 1, maxLen = 255) => {\r\n    if (value === '') return {valid: false, err: `Заполните поле`}\r\n    if (value.length < minLen) return {valid: false, err: `Минимальная длина поля ${minLen} символов`}\r\n    if (value.length > maxLen) return {valid: false, err: `Максимальная длина поля ${maxLen} символов`}\r\n\r\n    return {valid: true, err: ''}\r\n}\r\n\r\nexport const validateUsername = (value) => {\r\n    const validator = validateString(value)\r\n    if (validator.valid === false) return validator\r\n\r\n    if (!/^[\\w.@+-]+$/.test(value)) return  {valid: false, err: `Имя пользователя может содержать символы \"a-z\", \"A-Z\", \"0-9\",\".\",\"@\", \"+\", \"-\" `}\r\n\r\n    return {valid: true, err: ''}\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {validateString, validateUsername} from \"../Helpers/validator\";\r\n\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.props.value,\r\n            valid: false,\r\n            err: 'Заполните поле',\r\n        }\r\n    }\r\n\r\n    changeHandler = e => {\r\n        const {value} = e.target;\r\n        const name = this.props.name;\r\n\r\n        let validator\r\n\r\n        switch (this.props.validType) {\r\n            case 'username' : {\r\n                validator = validateUsername(value)\r\n                break\r\n            }\r\n            default: validator = validateString(value)\r\n        }\r\n\r\n        const {valid, err} = validator\r\n\r\n        this.setState({value, valid, err})\r\n\r\n        this.props.onChange({valid, value, name});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classNames(this.state.valid ? 'valid' : 'no-valid', `${this.props.name.toLowerCase()}-filed`, 'input', this.props.className)}>\r\n                <label>\r\n                    {\r\n                        this.props.label ? <span className='label'>{this.props.label}</span> : null\r\n                    }\r\n                    <input\r\n                        type={this.props.type ?? 'text'}\r\n                        name={this.props.name}\r\n                        placeholder={this.props.placeholder ?? ''}\r\n                        value={this.state.value}\r\n                        onChange={this.changeHandler}\r\n                    />\r\n                </label>\r\n                {\r\n                    this.state.err ? <span className='error-aria'>{this.state.err}</span> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    validType: PropTypes.string,\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport default Input;","import axios from \"axios\";\r\n\r\nexport const userLogin = user => {\r\n    return dispatch => {\r\n        return axios.post('http://emphasoft-test-assignment.herokuapp.com/api-token-auth/', user)\r\n            .then( response => {\r\n                if (response.data.token) {\r\n                    localStorage.setItem(\"token\", response.data.token);\r\n                    dispatch(loginUser(response.data.token))\r\n                }\r\n            })\r\n            .catch( error => {\r\n                if (error.response && error.response.status === 400) {\r\n                    if (error.response.data.non_field_errors) dispatch(showMessage({message: 'Не правильно введен логин или пароль', type: 'err'}))\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nconst loginUser = obj => ({\r\n    type: 'LOGIN_USER',\r\n    payload: obj\r\n})\r\n\r\nexport const logout= () => ({\r\n    type: 'LOGOUT_USER'\r\n})\r\n\r\nexport const getToken = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n        if (token) {\r\n            dispatch(loginUser(token))\r\n        }\r\n    }\r\n}\r\n\r\nexport const showMessage = msgObj => ({\r\n    type: 'MESSAGEBAR_SHOW_MESSAGE',\r\n    payload: msgObj\r\n})\r\n\r\nexport const hideMessage = obj => ({\r\n    type: 'MESSAGEBAR_HIDE_MESSAGE'\r\n})\r\n\r\nexport const getUsersFetch = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n        if (token) {\r\n            return axios.get('http://emphasoft-test-assignment.herokuapp.com/api/v1/users/', {\r\n                headers: {\r\n                    'Authorization': `Token ${token}`\r\n                }\r\n            })\r\n                .then( response => {\r\n                    if (response.data) {\r\n                        if (Array.isArray(response.data)) dispatch(setUsers(response.data))\r\n                    }\r\n                })\r\n                .catch( error => {\r\n                    if (error.response && error.response.status === 401) {\r\n                        localStorage.removeItem('token')\r\n                        dispatch(logout())\r\n                        dispatch(showMessage({message: 'Вы не авторизованы', type: 'err'}))\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nconst setUsers = usersArr => ({\r\n    type: 'GET_LIST_USERS',\r\n    payload: usersArr\r\n})\r\n\r\nexport const clearUsers = () => ({\r\n    type: 'CLEAR_LIST_USERS'\r\n})\r\n","import React, {Component} from 'react';\r\nimport Input from \"./Input\";\r\nimport {connect} from 'react-redux';\r\nimport {userLogin} from './../Actions';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: {value: '', valid: false},\r\n            password: {value: '', valid: false},\r\n        }\r\n    }\r\n\r\n    changeHandle = obj => {\r\n        this.setState(\r\n            {\r\n                [obj.name]: {value: obj.value, valid: obj.valid}\r\n            }\r\n        )\r\n    }\r\n\r\n    submitHandle = e  => {\r\n        e.preventDefault()\r\n        const canSubmit = this.state.username.valid && this.state.password.valid;\r\n\r\n        if (canSubmit) {\r\n            this.props.userLogin({\r\n                username: this.state.username.value,\r\n                password: this.state.password.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container login-page'>\r\n                <form onSubmit={this.submitHandle}>\r\n                    <h1>Авторизация</h1>\r\n                    <Input onChange={this.changeHandle} placeholder='Ваш логин' name='username'/>\r\n                    <Input onChange={this.changeHandle} placeholder='Ваш пароль' name='password'/>\r\n                    <input type='submit'/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    token: state.login.token\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userLogin: userInfo => dispatch(userLogin(userInfo))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {showMessage, hideMessage} from \"../Actions\";\r\n\r\nclass MessageBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timeoutId: -1\r\n        }\r\n    }\r\n\r\n    clickHandle = e => {\r\n        e.preventDefault()\r\n        this.props.hideMessage()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.msgObj.message !== prevProps.msgObj.message) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\r\n        {\r\n            const timeoutId = setTimeout(() => {\r\n                this.props.hideMessage()\r\n            }, 10000)\r\n\r\n            this.setState({timeoutId})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.state.timeoutId)\r\n    }\r\n\r\n    render() {\r\n        const {message, type} = this.props.msgObj;\r\n\r\n        if (message) {\r\n            return (\r\n                <div className={classNames('message-bar', type)}>\r\n                    <span>{message}</span>\r\n                    <button className='close' onClick={this.clickHandle}></button>\r\n                </div>\r\n            );\r\n        }else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nMessageBar.propTypes = {};\r\n\r\nconst mapStateToProps = state => ({\r\n    msgObj: state.messageBar.message,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    hideMessage: () => dispatch(hideMessage())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBar);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Input from \"./Input\";\r\n\r\nclass DataTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentFilter: '',\r\n            isTopSort: false,\r\n            usersFilter: [],\r\n            isFiltered: false,\r\n            username: ''\r\n        }\r\n    }\r\n\r\n    sortByKey = (arr, key, isTop=true) => {\r\n        console.log(key, isTop)\r\n        if (isTop) {\r\n            return arr.sort(\r\n                (a, b) => {\r\n                    if (isNaN(a[key]) || isNaN(b[key])) return a[key] > b[key] ? 1 : -1\r\n                    return Number(a[key]) > Number(b[key]) ? 1 : -1\r\n                }\r\n            )\r\n        }\r\n        return arr.sort(\r\n            (a, b) => {\r\n                if (isNaN(a[key]) || isNaN(b[key])) return a[key] < b[key] ? 1 : -1\r\n                return Number(a[key]) < Number(b[key]) ? 1 : -1\r\n            }\r\n        )\r\n    }\r\n\r\n    filterHandleClick = e => {\r\n        e.preventDefault()\r\n        const {target} = e;\r\n        const {currentFilter, isTopSort, isFiltered} = this.state;\r\n\r\n        const name = target.attributes.getNamedItem('name').value;\r\n        if (currentFilter === name) {\r\n            this.setState({\r\n                isTopSort: !isTopSort\r\n            })\r\n            this.sortByKey(isFiltered ? this.state.usersFilter : this.props.data, currentFilter, isTopSort)\r\n        }else {\r\n            this.setState({\r\n                currentFilter: name,\r\n                isTopSort: false\r\n            })\r\n            this.sortByKey( isFiltered ? this.state.usersFilter : this.props.data , name, true)\r\n        }\r\n    }\r\n\r\n    renderTableHeader = () => {\r\n        const {data} = this.props;\r\n        const {currentFilter, isTopSort} = this.state;\r\n        const keys = Object.keys(data[0]);\r\n\r\n        return keys.map( (v, k) => {\r\n            return (\r\n                <th onClick={this.filterHandleClick} name={v} className={classNames(v, 'header-field', currentFilter === v ? isTopSort === true ? 'active-top' : 'active-down' : '')} key={k}>{v}</th>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderRows = (data) => {\r\n        return data.map( (v, k) => {\r\n            return (\r\n                <tr className='data-row' key={k}>\r\n                    {\r\n                        Object.values(v).map((dataValue, dataKey) => {\r\n                           return <td key={dataKey}>{typeof dataValue === 'boolean' ? <input type='checkbox' readOnly checked={dataValue}/> : dataValue}</td>\r\n                        })\r\n                    }\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    changeHandler = obj => {\r\n        const {currentFilter} = this.state;\r\n\r\n        if (obj.valid) {\r\n            const filteredItems = this.props.data.filter(p => p.username.startsWith(obj.value));\r\n            console.log(filteredItems)\r\n            const isFiltered = !filteredItems.length <= 0;\r\n            this.setState({\r\n                usersFilter: filteredItems,\r\n                isFiltered: isFiltered,\r\n                username: obj.value\r\n            })\r\n\r\n            this.sortByKey(this.state.usersFilter, currentFilter, true)\r\n        }else {\r\n            this.setState({\r\n                usersFilter: [],\r\n                isFiltered: false,\r\n                username: ''\r\n            })\r\n\r\n            this.sortByKey(this.props.data, currentFilter, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.props;\r\n\r\n        if (data.length <= 0) return null\r\n\r\n        const {usersFilter, username} = this.state;\r\n\r\n        return (\r\n           <div>\r\n               <Input label='Фильт по имени пользователя' validType='username' className='filter-field' placeholder='Введите имя пользователя' name='userFilter' value={this.state.username} onChange={this.changeHandler} />\r\n               <table className={classNames('data-table', this.props.filterable ? 'filterable' : '')}>\r\n                   <thead className='data-table-header'>\r\n                   <tr>\r\n                       {\r\n                           this.renderTableHeader()\r\n                       }\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   {\r\n                       username ? this.renderRows(usersFilter) : this.renderRows(data)\r\n                   }\r\n                   </tbody>\r\n               </table>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nDataTable.propTypes = {\r\n    filterable: PropTypes.bool,\r\n    data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getUsersFetch} from \"../Actions\";\r\nimport {connect} from \"react-redux\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsersFetch()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable data={this.props.users}/>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {};\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.usersList.users\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUsersFetch: () => dispatch(getUsersFetch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Login from \"./Components/Login\";\nimport {getToken, logout} from \"./Actions\";\nimport MessageBar from \"./Components/MessageBar\";\n\nimport './App.sass'\nimport Home from \"./Components/Home\";\n\nclass App extends Component {\n  componentDidMount = () => {\n    this.props.getToken()\n  }\n\n    clickHandle = e => {\n        e.preventDefault()\n        localStorage.removeItem(\"token\")\n        this.props.logout()\n    }\n\n  render() {\n      const {token} = this.props;\n\n      return (\n        <BrowserRouter>\n            <div className='container-fluid header'>\n                <div className='container'>\n                    <div className='header-container'>\n                        <ul>\n                            <li>\n                                <Link className='button' to=\"/\">Главная</Link>\n                            </li>\n                            {\n                                !token ? <li><Link className='button' to=\"/login\">Войти</Link></li> : null\n                            }\n                        </ul>\n                        {\n                            token\n                                ? <button onClick={this.clickHandle}>Выход</button>\n                                : null\n                        }\n                    </div>\n                </div>\n            </div>\n                <Switch>\n                    <Route exact path=\"/\">\n                        {!token ? <Redirect to=\"/login\" /> : <Home/>}\n                    </Route>\n                   <Route path=\"/login\">\n                       {token ? <Redirect to=\"/\" /> : <Login/>}\n                   </Route>\n                </Switch>\n            <MessageBar/>\n        </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    token: state.login.token\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getToken: () => dispatch(getToken()),\n    logout: () => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    token: ''\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, token: action.payload}\r\n        case 'LOGOUT_USER':\r\n            return {...state, token: ''}\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    message: '',\r\n    type: ''\r\n}\r\n\r\nexport default function messageBarReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'MESSAGEBAR_SHOW_MESSAGE':\r\n            return {...state, message: action.payload}\r\n        case 'MESSAGEBAR_HIDE_MESSAGE':\r\n            return {...state, message: ''}\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    users: []\r\n}\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_LIST_USERS':\r\n            return {...state, users: action.payload}\r\n        case 'CLEAR_LIST_USERS':\r\n            return {...state, users: []}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport loginReducer from \"./loginReducer\";\r\nimport messageBarReducer from \"./messageBarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n    login: loginReducer,\r\n    messageBar: messageBarReducer,\r\n    usersList: usersReducer,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store()}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nexport default function (initialState = {}) {\r\n    return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}"],"sourceRoot":""}